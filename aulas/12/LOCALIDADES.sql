USE localidades;

CREATE TABLE PREFEITO(
	ID INT AUTO_INCREMENT PRIMARY KEY,
    Nome VARCHAR(50) NOT NULL,
    DataPosse DATE NOT NULL
);

ALTER TABLE CIDADE
ADD COLUMN Prefeito_ID INT,
ADD FOREIGN KEY (Prefeito_ID) REFERENCES PREFEITO(Id);

select * from cidade;

INSERT INTO PREFEITO (Nome, DataPosse) VALUES
	('João da Silva', '2024-01-01'),
    ('Maria Oliveira', '2023-01-01'),
    ('Carlos Santos', '2021-01-01');
    
UPDATE CIDADE
SET Prefeito_ID = 1
WHERE ID = 1;

UPDATE CIDADE
SET Prefeito_ID = 2
WHERE ID = 5;

UPDATE CIDADE
SET Prefeito_ID = 3
WHERE Estado_ID = 2 AND ID = 3;

-- Exibir o nome da cidade e o nome do prefeito
SELECT CIDADE.Nome AS Cidade, ESTADO.Sigla AS UF, Prefeito.Nome AS Prefeito
FROM CIDADE
LEFT JOIN PREFEITO ON CIDADE.Prefeito_ID = PREFEITO.ID
INNER JOIN ESTADO ON Cidade.Estado_ID = ESTADO.ID;

INSERT INTO ESTADO (Nome, Sigla) VALUES ('Sergipe', 'SE');


# 1
-- FAÇA UMA UNÇÃO DA TABELA CIDADE E ESTADO, MOSTRANDO:
-- NOME DA CIDADE, SIGLA DO ESTADO. APENAS NAS CIDADES QUE TEM ESTADO

SELECT CIDADE.Nome, ESTADO.Sigla
FROM CIDADE
INNER JOIN ESTADO ON Cidade.Estado_ID = ESTADO.ID;

# 2 
-- FAÇA UMA JUNÇÃO DA TABELA CIDADE E ESTADO, MOSTRANDO:
-- NOME DA CIDADE, SIGLA DO ESTADO. TODAS AS CIDADE, INDEPENDENTE DE TEREM ESTADO

SELECT CIDADE.Nome, ESTADO.Sigla
FROM CIDADE
LEFT JOIN ESTADO ON CIDADE.ESTADO_ID = ESTADO.ID;

# 3
-- FAÇA UMA JUNÇÃO DA TABELA CIDADE E ESTADO, MOSTRANDO:
-- NOME DA CIDADE, SIGLA DO ESTADO. MOSTRE TODOS OS ESTADOS, INDEPENDENTE DE TEREM CIDADES
 
SELECT CIDADE.Nome, ESTADO.Sigla
FROM CIDADE
RIGHT JOIN ESTADO ON CIDADE.ESTADO_ID = ESTADO.ID;
 
# 4
-- FAÇA UMA JUNÇÃO DA TABELA CIDADE, ESTADO E PREFEITO:
-- CIDADE.NOME, ESTADO.SIGLA/UF, PREFEITO.NOME, PREFEITO.DATAPOSSE
-- PARA TODAS AS CIDADES QUE TEM PREFEITO

SELECT CIDADE.NOME, ESTADO.Sigla AS UF, PREFEITO.Nome, PREFEITO.DataPosse
FROM CIDADE
LEFT JOIN ESTADO ON CIDADE.ESTADO_ID = ESTADO.ID
INNER JOIN PREFEITO ON PREFEITO_ID = PREFEITO.ID;

INSERT INTO CIDADE (NOME, ESTADO_ID, PREFEITO_ID) VALUES
	('JACOBINA', NULL , 2);



